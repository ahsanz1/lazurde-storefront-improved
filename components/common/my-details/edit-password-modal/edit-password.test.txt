import React from "react";
import { screen, render, fireEvent, act } from "@testing-library/react";
import ContextProvider, { AppContext } from "lib/context";
import EditPasswordDetails from "./edit-password-modal";

const closeModal = jest.fn();

jest.mock('react', () => ({
  ...jest.requireActual('react') as object,
  useLayoutEffect: jest.requireActual('react').useEffect,
}));

const renderComponent = () => {
  render(
    <ContextProvider>
      <EditPasswordDetails closeModal={closeModal} isOpenPasswordModal={true} />
    </ContextProvider>
  );
};

test("Mydetailpasswword", async () => {
  renderComponent();
  const saveButtonn = screen.getByTestId("savePASSWORD");
  expect(saveButtonn).toBeInTheDocument();
  fireEvent.click(saveButtonn);
  const showpassword = screen.getByTestId("showpassword");
  expect(showpassword).toBeInTheDocument();
  fireEvent.click(showpassword);
  const showpasswordd = screen.getByTestId("showpasswordd");
  expect(showpasswordd).toBeInTheDocument();
  fireEvent.click(showpasswordd);
 /*  const showpassworddd = screen.getByTestId("showpassworddd");
  expect(showpassworddd).toBeInTheDocument();
  fireEvent.click(showpassworddd); */
  const crossBtn = screen.getByRole("passwordcrossBtn");
  expect(crossBtn).toBeInTheDocument();
  fireEvent.click(crossBtn);
  const heading = screen.getByTestId("passwordheading");
  expect(heading).toBeInTheDocument();
  const paragraph = screen.getByRole("paragraph");
  expect(paragraph).toBeInTheDocument();
  const label = screen.getByLabelText("passwordlabel");
  expect(label).toBeInTheDocument();
  const newlabel = screen.getByLabelText("newpasswordlabel");
  expect(newlabel).toBeInTheDocument();
 /*  const relabel = screen.getByLabelText("repasswordlabel");
  expect(relabel).toBeInTheDocument(); */
});

const renderComponentAR = () => {
  render(
    <AppContext.Provider value={{ appState: { lang: "ar" } }}>
      <EditPasswordDetails closeModal={closeModal} isOpenPasswordModal={true} />
    </AppContext.Provider>
  );
};

describe("Mydetailpasswword", () => {
  test("Mydetailpasswword props", () => {
    renderComponentAR();
    const saveButtonn = screen.getByTestId("savePASSWORD");
    expect(saveButtonn).toBeInTheDocument();
    fireEvent.click(saveButtonn);
    const showpassword = screen.getByTestId("showpassword");
    expect(showpassword).toBeInTheDocument();
    fireEvent.click(showpassword);
    const showpasswordd = screen.getByTestId("showpasswordd");
    expect(showpasswordd).toBeInTheDocument();
    fireEvent.click(showpasswordd);
    const crossBtn = screen.getByRole("passwordcrossBtn");
    expect(crossBtn).toBeInTheDocument();
    fireEvent.click(crossBtn);
    const heading = screen.getByTestId("passwordheading");
    expect(heading).toBeInTheDocument();
    const label = screen.getByLabelText("passwordlabel");
    expect(label).toBeInTheDocument();
    const newlabel = screen.getByLabelText("newpasswordlabel");
    expect(newlabel).toBeInTheDocument();
    const paragraph = screen.getByRole("paragraph");
    expect(paragraph).toBeInTheDocument();
  });
});
