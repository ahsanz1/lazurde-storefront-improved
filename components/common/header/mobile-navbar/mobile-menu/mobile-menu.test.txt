import * as React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import MobileMenu from "./mobile-menu";
import { brandSideBarForTesting, menuDataForTesting } from "lib/mock-data/data";
import ContextProvider, { AppContext } from "lib/context";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
const queryClient = new QueryClient();
const closeMenu = jest.fn();

const mockIntersectionObserver = jest.fn();
mockIntersectionObserver.mockReturnValue({
  observe: (): any => null,
  unobserve: (): any => null,
  disconnect: (): any => null,
});
window.IntersectionObserver = mockIntersectionObserver;

test("Mobile Menu testing", () => {
  const active = false;

  render(
    <QueryClientProvider client={queryClient}>
      <ContextProvider>
        <MobileMenu
          headerId={"lazurdeHeader"}
          brandSideBar={brandSideBarForTesting}
          menuData={menuDataForTesting}
          closeMenu={closeMenu}
        />
      </ContextProvider>
    </QueryClientProvider>
  );

  // expect(screen.getByTestId("cross-btn")).toBeInTheDocument();
  // fireEvent.click(screen.getByTestId("cross-btn1"));
  // expect(closeMenu).toBeCalled();

  // const lists = screen.getAllByRole("listitem");
  // expect(lists[0]).toBeInTheDocument();
  // fireEvent.click(lists[0]);
  // expect(closeMenu).toBeCalled();

  // expect(active).toBe(false);
});

test("Mobile Menu header id testing", () => {
  render(
    <QueryClientProvider client={queryClient}>
      <ContextProvider>
        <MobileMenu
          headerId={"MissL"}
          brandSideBar={brandSideBarForTesting}
          menuData={menuDataForTesting}
          closeMenu={closeMenu}
        />
      </ContextProvider>
    </QueryClientProvider>
  );

  expect(screen.getByTestId("site-logo")).toBeInTheDocument();
  fireEvent.click(screen.getByTestId("site-logo"));
});

test("mobile menu arabic", () => {
  render(
    <QueryClientProvider client={queryClient}>
      <AppContext.Provider
        value={{ appState: { lang: "ar" }, saveAppState: jest.fn() }}
      >
        <MobileMenu
          headerId={"L'azurde"}
          brandSideBar={brandSideBarForTesting}
          menuData={menuDataForTesting}
          closeMenu={closeMenu}
        />
      </AppContext.Provider>
    </QueryClientProvider>
  );
});
